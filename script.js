// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase (–≤–∞—à–∞)
const firebaseConfig = {
  apiKey: 'AIzaSyB8i6XUdNv8XdMEtip7mMBZe_f1-6MuawE',
  authDomain: 'mamcoins-tracker.firebaseapp.com',
  projectId: 'mamcoins-tracker',
  storageBucket: 'mamcoins-tracker.firebasestorage.app',
  messagingSenderId: '655371831130',
  appId: '1:655371831130:web:1bd473c42b14cb4bd15563',
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let mamcoins = 0;
let pavlushi = 0;
let history = [];
let isLoading = true;
let db = null;
let userId = 'family_child_1'; // ID —Ä–µ–±–µ–Ω–∫–∞

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç Firebase –±–µ–∑ type="module"
async function initializeFirebase() {
  try {
    console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase...');
    
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç Firebase –º–æ–¥—É–ª–µ–π
    const { initializeApp } = await import('https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js');
    const { getFirestore, doc, setDoc, onSnapshot, updateDoc } = await import('https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js');
    
    const app = initializeApp(firebaseConfig);
    db = getFirestore(app);
    
    console.log('‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Å–ª—É—à–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    startDataListener();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase:', error);
    
    // Fallback –Ω–∞ localStorage
    console.log('üì± –ò—Å–ø–æ–ª—å–∑—É–µ–º localStorage');
    loadFromLocalStorage();
    isLoading = false;
    updateDisplay();
    loadHistory();
  }
}

// –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö Firebase
async function startDataListener() {
  try {
    const { doc, onSnapshot, setDoc } = await import('https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js');
    
    const userDoc = doc(db, 'users', userId);
    
    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    onSnapshot(userDoc, (docSnapshot) => {
      if (docSnapshot.exists()) {
        const data = docSnapshot.data();
        mamcoins = data.mamcoins || 0;
        pavlushi = data.pavlushi || 0;
        history = data.history || [];
        
        console.log(`üí∞ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ Firebase: ${mamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤, ${pavlushi} –ø–∞–≤–ª—É—à–µ–π`);
      } else {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('üë∂ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        createNewUser();
      }
      
      isLoading = false;
      updateDisplay();
      loadHistory();
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase:', error);
    loadFromLocalStorage();
    isLoading = false;
    updateDisplay();
    loadHistory();
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firebase
async function createNewUser() {
  try {
    const { doc, setDoc } = await import('https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js');
    
    const userDoc = doc(db, 'users', userId);
    await setDoc(userDoc, {
      mamcoins: 0,
      pavlushi: 0,
      history: [],
      createdAt: new Date().toISOString(),
      lastActive: new Date().toISOString(),
    });
    
    console.log('‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ Firebase');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Firebase
async function saveToFirebase() {
  if (isLoading || !db) {
    console.log('‚è≥ Firebase –Ω–µ –≥–æ—Ç–æ–≤, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ');
    saveToLocalStorage();
    return;
  }
  
  try {
    const { doc, updateDoc } = await import('https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js');
    
    const userDoc = doc(db, 'users', userId);
    await updateDoc(userDoc, {
      mamcoins: mamcoins,
      pavlushi: pavlushi,
      history: history,
      lastActive: new Date().toISOString(),
    });
    
    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ Firebase: ${mamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤, ${pavlushi} –ø–∞–≤–ª—É—à–µ–π`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Firebase:', error);
    
    // Fallback –Ω–∞ localStorage
    saveToLocalStorage();
  }
}

// Fallback –º–µ—Ç–æ–¥—ã –¥–ª—è localStorage
function loadFromLocalStorage() {
  const savedMamcoins = localStorage.getItem('mamcoins');
  const savedPavlushi = localStorage.getItem('pavlushi');
  const savedHistory = localStorage.getItem('history');

  if (savedMamcoins !== null) {
    mamcoins = parseInt(savedMamcoins);
  }

  if (savedPavlushi !== null) {
    pavlushi = parseInt(savedPavlushi);
  }

  if (savedHistory) {
    try {
      history = JSON.parse(savedHistory);
    } catch (e) {
      history = [];
    }
  }

  console.log(`üì± –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ localStorage: ${mamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤, ${pavlushi} –ø–∞–≤–ª—É—à–µ–π`);
}

function saveToLocalStorage() {
  localStorage.setItem('mamcoins', mamcoins.toString());
  localStorage.setItem('pavlushi', pavlushi.toString());
  localStorage.setItem('history', JSON.stringify(history));
  
  console.log(`üì± –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ localStorage: ${mamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤, ${pavlushi} –ø–∞–≤–ª—É—à–µ–π`);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function updateDisplay() {
  const mamcoinsEl = document.getElementById('mamcoins');
  const pavlushiEl = document.getElementById('pavlushi');
  
  if (mamcoinsEl) mamcoinsEl.textContent = mamcoins;
  if (pavlushiEl) pavlushiEl.textContent = pavlushi;
}

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø–∞–≤–ª—É—à–µ–π –≤ –º–∞–º–∫–æ–∏–Ω—ã
function convertPavlushi() {
  if (pavlushi >= 10) {
    const newMamcoins = Math.floor(pavlushi / 10);
    mamcoins += newMamcoins;
    pavlushi = pavlushi % 10;

    addToHistory(`üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: ${newMamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤ –∏–∑ –ø–∞–≤–ª—É—à–µ–π`, 'earn');
  }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
function addToHistory(text, type = 'earn') {
  const now = new Date();
  const timeStr = now.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });

  const newHistoryItem = {
    text: text,
    time: timeStr,
    type: type,
    timestamp: now.getTime(),
  };

  history.unshift(newHistoryItem);

  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é 50 –∑–∞–ø–∏—Å—è–º–∏
  if (history.length > 50) {
    history = history.slice(0, 50);
  }

  saveToFirebase();
  loadHistory();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
function loadHistory() {
  const historyList = document.getElementById('history-list');
  if (!historyList) return;

  historyList.innerHTML = '';
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  if (isLoading) {
    historyList.innerHTML = '<div class="history-item">üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase...</div>';
    return;
  }

  if (history.length === 0) {
    historyList.innerHTML = '<div class="history-item">üìù –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞</div>';
    return;
  }

  history.forEach(item => {
    const div = document.createElement('div');
    div.className = `history-item ${item.type}`;
    div.innerHTML = `<strong>[${item.time}]</strong> ${item.text}`;
    historyList.appendChild(div);
  });
}

// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø HTML onclick

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
function showEarnModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞');
  document.getElementById('earnModal').style.display = 'block';
}

function showSpendModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —à—Ç—Ä–∞—Ñ–∞');
  document.getElementById('spendModal').style.display = 'block';
}

function showShopModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞–≥–∞–∑–∏–Ω–∞');
  document.getElementById('shopModal').style.display = 'block';
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
function closeModal(modalId) {
  console.log(`ü¶ä –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ: ${modalId}`);
  document.getElementById(modalId).style.display = 'none';

  // –û—á–∏—Å—Ç–∏—Ç—å –≤—ã–±–æ—Ä
  const selectors = {
    earnModal: 'earnAction',
    spendModal: 'spendAction',
    shopModal: 'shopAction',
  };

  if (selectors[modalId]) {
    const selectElement = document.getElementById(selectors[modalId]);
    if (selectElement) {
      selectElement.value = '';
    }
  }
}

// –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞—Ä–∞–±–æ—Ç–æ–∫
function confirmEarn() {
  const select = document.getElementById('earnAction');
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!');
    return;
  }

  console.log(`‚úÖ –ó–∞—Ä–∞–±–æ—Ç–∞–ª: ${text} (+${value} –ø–∞–≤–ª—É—à–µ–π)`);

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≤–ª—É—à–∏
  pavlushi += value;

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –º–∞–º–∫–æ–∏–Ω—ã
  convertPavlushi();

  addToHistory(`‚úÖ ${text}`, 'earn');
  updateDisplay();

  closeModal('earnModal');
}

// –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —à—Ç—Ä–∞—Ñ
function confirmSpend() {
  const select = document.getElementById('spendAction');
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Å—Ç—É–ø–æ–∫!');
    return;
  }

  console.log(`‚ùå –®—Ç—Ä–∞—Ñ: ${text} (-${value} –ø–∞–≤–ª—É—à–µ–π/–º–∞–º–∫–æ–∏–Ω–æ–≤)`);

  // –í—ã—á–∏—Ç–∞–µ–º –ø–∞–≤–ª—É—à–∏ –∏–ª–∏ –º–∞–º–∫–æ–∏–Ω—ã
  if (value >= 100) { // –≠—Ç–æ –º–∞–º–∫–æ–∏–Ω—ã (–∑–Ω–∞—á–µ–Ω–∏—è 100 –∏ –±–æ–ª—å—à–µ)
    const mamcoinsToRemove = Math.floor(value / 10);
    if (mamcoins >= mamcoinsToRemove) {
      mamcoins -= mamcoinsToRemove;
    } else {
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–∞–º–∫–æ–∏–Ω—ã –≤ –ø–∞–≤–ª—É—à–∏ –∏ –≤—ã—á–∏—Ç–∞–µ–º
      const totalPavlushi = mamcoins * 10 + pavlushi;
      if (totalPavlushi >= value) {
        const remainingPavlushi = totalPavlushi - value;
        mamcoins = Math.floor(remainingPavlushi / 10);
        pavlushi = remainingPavlushi % 10;
      } else {
        mamcoins = 0;
        pavlushi = 0;
      }
    }
  } else { // –≠—Ç–æ –ø–∞–≤–ª—É—à–∏
    if (pavlushi >= value) {
      pavlushi -= value;
    } else {
      // –ë–µ—Ä–µ–º –∏–∑ –º–∞–º–∫–æ–∏–Ω–æ–≤
      const totalPavlushi = mamcoins * 10 + pavlushi;
      if (totalPavlushi >= value) {
        const remainingPavlushi = totalPavlushi - value;
        mamcoins = Math.floor(remainingPavlushi / 10);
        pavlushi = remainingPavlushi % 10;
      } else {
        mamcoins = 0;
        pavlushi = 0;
      }
    }
  }

  addToHistory(`‚ùå ${text}`, 'spend');
  updateDisplay();

  closeModal('spendModal');
}

// –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É
function confirmShop() {
  const select = document.getElementById('shopAction');
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!');
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –º–∞–º–∫–æ–∏–Ω–æ–≤
  const mamcoinsNeeded = Math.floor(value / 10);
  const totalMamcoins = mamcoins + Math.floor(pavlushi / 10);

  if (totalMamcoins < mamcoinsNeeded) {
    alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–º–∫–æ–∏–Ω–æ–≤! –ù—É–∂–Ω–æ: ${mamcoinsNeeded}, –µ—Å—Ç—å: ${totalMamcoins}`);
    return;
  }

  console.log(`üõí –ü–æ–∫—É–ø–∫–∞: ${text} (-${mamcoinsNeeded} –º–∞–º–∫–æ–∏–Ω–æ–≤)`);

  // –°–ø–∏—Å—ã–≤–∞–µ–º –º–∞–º–∫–æ–∏–Ω—ã
  const totalPavlushi = mamcoins * 10 + pavlushi;
  const remainingPavlushi = totalPavlushi - value;

  mamcoins = Math.floor(remainingPavlushi / 10);
  pavlushi = remainingPavlushi % 10;

  addToHistory(`üõí –ö—É–ø–∏–ª: ${text}`, 'shop');
  updateDisplay();

  closeModal('shopModal');
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏—Ö
window.onclick = function (event) {
  const modals = ['earnModal', 'spendModal', 'shopModal'];

  modals.forEach(modalId => {
    const modal = document.getElementById(modalId);
    if (event.target === modal) {
      closeModal(modalId);
    }
  });
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.mamcoinsDebug = {
  showData: () => console.log({ mamcoins, pavlushi, history, isLoading, db: !!db }),
  addMamcoins: (amount) => { mamcoins += amount; updateDisplay(); saveToFirebase(); },
  addPavlushi: (amount) => { pavlushi += amount; updateDisplay(); saveToFirebase(); },
  reset: () => { mamcoins = 0; pavlushi = 0; history = []; updateDisplay(); saveToFirebase(); },
  forceSync: () => saveToFirebase()
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function () {
  console.log('ü¶ä –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –º–∞–º–∫–æ–∏–Ω–æ–≤...');
  updateDisplay();
  loadHistory();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase
  initializeFirebase();
});

console.log('ü¶ä –°–∏—Å—Ç–µ–º–∞ –º–∞–º–∫–æ–∏–Ω–æ–≤ —Å Firebase –≥–æ—Ç–æ–≤–∞! –ö–æ–º–∞–Ω–¥—ã –æ—Ç–ª–∞–¥–∫–∏: window.mamcoinsDebug');
