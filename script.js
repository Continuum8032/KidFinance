// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase (–≤–∞—à–∞)
const firebaseConfig = {
    apiKey: "AIzaSyB8i6XUdNv8XdMEtip7mMBZe_f1-6MuawE",
    authDomain: "mamcoins-tracker.firebaseapp.com",
    projectId: "mamcoins-tracker",
    storageBucket: "mamcoins-tracker.firebasestorage.app",
    messagingSenderId: "655371831130",
    appId: "1:655371831130:web:1bd473c42b14cb4bd15563"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js';
import { getFirestore, doc, getDoc, setDoc, onSnapshot } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js';

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ–º—å–∏)
const USER_ID = 'family_main';

let mamcoins = 0;
let pavlushi = 0;
let history = [];
let isOnline = true;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
function checkOnlineStatus() {
    isOnline = navigator.onLine;
    const statusIndicator = document.getElementById('status-indicator');
    if (statusIndicator) {
        statusIndicator.textContent = isOnline ? 'üåê –û–Ω–ª–∞–π–Ω' : 'üì¥ –û—Ñ—Ñ–ª–∞–π–Ω';
        statusIndicator.style.color = isOnline ? '#4caf50' : '#f44336';
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase
async function loadData() {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
    
    try {
        const docRef = doc(db, 'mamcoins', USER_ID);
        const docSnap = await getDoc(docRef);
        
        if (docSnap.exists()) {
            const data = docSnap.data();
            mamcoins = data.mamcoins || 0;
            pavlushi = data.pavlushi || 0;
            history = data.history || [];
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ Firebase');
        } else {
            console.log('üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å');
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
            await saveData();
        }
        
        updateDisplay();
        renderHistory();
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        onSnapshot(docRef, (doc) => {
            if (doc.exists()) {
                const data = doc.data();
                const newMamcoins = data.mamcoins || 0;
                const newPavlushi = data.pavlushi || 0;
                const newHistory = data.history || [];
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
                if (newMamcoins !== mamcoins || newPavlushi !== pavlushi || 
                    JSON.stringify(newHistory) !== JSON.stringify(history)) {
                    
                    mamcoins = newMamcoins;
                    pavlushi = newPavlushi;
                    history = newHistory;
                    
                    updateDisplay();
                    renderHistory();
                    
                    console.log('üîÑ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
                }
            }
        });
        
        isOnline = true;
        checkOnlineStatus();
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ Firebase:', error);
        isOnline = false;
        checkOnlineStatus();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤
        loadFromLocalStorage();
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Firebase
async function saveData() {
    try {
        const docRef = doc(db, 'mamcoins', USER_ID);
        const dataToSave = {
            mamcoins: mamcoins,
            pavlushi: pavlushi,
            history: history,
            lastUpdated: new Date().toISOString()
        };
        
        await setDoc(docRef, dataToSave);
        console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Firebase');
        
        // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤
        saveToLocalStorage();
        
        isOnline = true;
        checkOnlineStatus();
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Firebase:', error);
        isOnline = false;
        checkOnlineStatus();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –µ—Å–ª–∏ Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        saveToLocalStorage();
    }
}

// –†–µ–∑–µ—Ä–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è localStorage
function loadFromLocalStorage() {
    mamcoins = parseInt(localStorage.getItem('mamcoins')) || 0;
    pavlushi = parseInt(localStorage.getItem('pavlushi')) || 0;
    
    const savedHistory = localStorage.getItem('history');
    history = savedHistory ? JSON.parse(savedHistory) : [];
    
    updateDisplay();
    renderHistory();
    console.log('üì± –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞');
}

function saveToLocalStorage() {
    localStorage.setItem('mamcoins', mamcoins.toString());
    localStorage.setItem('pavlushi', pavlushi.toString());
    localStorage.setItem('history', JSON.stringify(history));
    console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function updateDisplay() {
    const mamcoinsElement = document.getElementById('mamcoins');
    const pavlushiElement = document.getElementById('pavlushi');
    
    if (mamcoinsElement) mamcoinsElement.textContent = mamcoins;
    if (pavlushiElement) pavlushiElement.textContent = pavlushi;
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø–∞–≤–ª—É—à–µ–π –≤ –º–∞–º–∫–æ–∏–Ω—ã
function convertCurrency() {
    if (pavlushi >= 10) {
        const newMamcoins = Math.floor(pavlushi / 10);
        mamcoins += newMamcoins;
        pavlushi = pavlushi % 10;
        
        if (newMamcoins > 0) {
            addToHistory(`–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ –º–∞–º–∫–æ–∏–Ω—ã`, `+${newMamcoins} üü¢`, 'positive');
            
            // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
            showNotification(`–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: +${newMamcoins} üü¢`);
        }
    }
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message) {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #4caf50;
        color: white;
        padding: 10px 15px;
        border-radius: 5px;
        font-family: 'Press Start 2P', monospace;
        font-size: 10px;
        z-index: 10000;
        animation: slideIn 0.3s ease;
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // –£–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
function addToHistory(text, amount, type = 'positive') {
    const now = new Date();
    const timeStr = now.toLocaleTimeString('ru-RU', { 
        hour: '2-digit', 
        minute: '2-digit' 
    });
    const dateStr = now.toLocaleDateString('ru-RU', {
        day: '2-digit',
        month: '2-digit'
    });
    
    history.unshift({
        text: text,
        amount: amount,
        type: type,
        time: timeStr,
        date: dateStr,
        timestamp: now.toISOString()
    });
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é 100 –∑–∞–ø–∏—Å—è–º–∏
    if (history.length > 100) {
        history = history.slice(0, 100);
    }
    
    renderHistory();
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
function renderHistory() {
    const historyList = document.getElementById('history-list');
    if (!historyList) return;
    
    historyList.innerHTML = '';
    
    if (history.length === 0) {
        historyList.innerHTML = `
            <div style="text-align: center; color: #666; font-size: 10px; padding: 20px;">
                –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–∫–∞ –ø—É—Å—Ç–∞—è ü¶ä<br>
                –ù–∞—á–Ω–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º–∞–º–∫–æ–∏–Ω—ã!
            </div>
        `;
        return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–∞–ø–∏—Å–µ–π
    history.slice(0, 20).forEach(item => {
        const div = document.createElement('div');
        div.className = `history-item ${item.type}`;
        div.innerHTML = `
            <div class="history-text">${item.text}</div>
            <div class="history-amount">${item.amount}</div>
            <div style="font-size: 8px; color: #666; margin-top: 2px;">
                ${item.date} ${item.time}
            </div>
        `;
        historyList.appendChild(div);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞–º–∫–æ–∏–Ω–æ–≤/–ø–∞–≤–ª—É—à–µ–π
function addCurrency(amount, description, type = 'positive') {
    pavlushi += amount;
    convertCurrency();
    updateDisplay();
    
    const displayAmount = amount >= 10 ? 
        `+${Math.floor(amount/10)} üü¢ ${amount%10} üü°` : 
        `+${amount} üü°`;
    
    addToHistory(description, displayAmount, type);
    saveData();
    
    // –ê–Ω–∏–º–∞—Ü–∏—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    animateBalance('positive');
}

// –û—Ç–Ω–∏–º–∞–Ω–∏–µ –º–∞–º–∫–æ–∏–Ω–æ–≤/–ø–∞–≤–ª—É—à–µ–π
function subtractCurrency(amount, description) {
    const totalPavlushi = mamcoins * 10 + pavlushi;
    
    if (totalPavlushi < amount) {
        showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–º–∫–æ–∏–Ω–æ–≤!');
        return false;
    }
    
    // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–Ω–∏–º–∞–µ–º –∏–∑ –ø–∞–≤–ª—É—à–µ–π
    if (pavlushi >= amount) {
        pavlushi -= amount;
    } else {
        // –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∞–≤–ª—É—à–µ–π, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –º–∞–º–∫–æ–∏–Ω—ã
        const neededPavlushi = amount - pavlushi;
        const neededMamcoins = Math.ceil(neededPavlushi / 10);
        
        mamcoins -= neededMamcoins;
        pavlushi = (neededMamcoins * 10) - neededPavlushi;
    }
    
    updateDisplay();
    
    const displayAmount = amount >= 10 ? 
        `-${Math.floor(amount/10)} üü¢ ${amount%10} üü°` : 
        `-${amount} üü°`;
    
    addToHistory(description, displayAmount, 'negative');
    saveData();
    
    // –ê–Ω–∏–º–∞—Ü–∏—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    animateBalance('negative');
    
    return true;
}

// –ü–æ–∫—É–ø–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
function purchase(cost, description) {
    const totalPavlushi = mamcoins * 10 + pavlushi;
    
    if (totalPavlushi < cost) {
        showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–º–∫–æ–∏–Ω–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!');
        return false;
    }
    
    // –û—Ç–Ω–∏–º–∞–µ–º –∏–∑ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    if (pavlushi >= cost) {
        pavlushi -= cost;
    } else {
        const neededFromMamcoins = cost - pavlushi;
        const mamcoinsToSpend = Math.ceil(neededFromMamcoins / 10);
        
        mamcoins -= mamcoinsToSpend;
        pavlushi = (mamcoinsToSpend * 10) - neededFromMamcoins;
    }
    
    updateDisplay();
    
    const displayAmount = cost >= 10 ? 
        `-${Math.floor(cost/10)} üü¢ ${cost%10} üü°` : 
        `-${cost} üü°`;
    
    addToHistory(`–ö—É–ø–∏–ª: ${description}`, displayAmount, 'purchase');
    saveData();
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–∫—É–ø–∫–∏
    animateBalance('purchase');
    showNotification(`üõí –ö—É–ø–ª–µ–Ω–æ: ${description}`);
    
    return true;
}

// –ê–Ω–∏–º–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–∞
function animateBalance(type) {
    const mamcoinsEl = document.getElementById('mamcoins');
    const pavlushiEl = document.getElementById('pavlushi');
    
    const color = type === 'positive' ? '#4caf50' : 
                 type === 'negative' ? '#f44336' : '#2196f3';
    
    [mamcoinsEl, pavlushiEl].forEach(el => {
        if (el) {
            el.style.color = color;
            el.style.transform = 'scale(1.2)';
            
            setTimeout(() => {
                el.style.color = '';
                el.style.transform = '';
            }, 500);
        }
    });
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
function showEarnModal() {
    document.getElementById('earnModal').style.display = 'block';
}

function showSpendModal() {
    document.getElementById('spendModal').style.display = 'block';
}

function showShopModal() {
    document.getElementById('shopModal').style.display = 'block';
}

function hideModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
function confirmEarn() {
    const select = document.getElementById('earnAction');
    const value = parseInt(select.value);
    const text = select.options[select.selectedIndex].text;
    
    if (value && text) {
        const cleanText = text.replace(/\s*\([^)]*\)/g, '').trim();
        addCurrency(value, cleanText, 'positive');
        select.value = '';
        hideModal('earnModal');
    } else {
        showNotification('‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!');
    }
}

function confirmSpend() {
    const select = document.getElementById('spendAction');
    const value = parseInt(select.value);
    const text = select.options[select.selectedIndex].text;
    
    if (value && text) {
        const cleanText = text.replace(/\s*\([^)]*\)/g, '').trim();
        if (subtractCurrency(value, cleanText)) {
            select.value = '';
            hideModal('spendModal');
        }
    } else {
        showNotification('‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Å—Ç—É–ø–æ–∫!');
    }
}

function confirmShop() {
    const select = document.getElementById('shopAction');
    const value = parseInt(select.value);
    const text = select.options[select.selectedIndex].text;
    
    if (value && text) {
        const cleanText = text.replace(/\s*\([^)]*\)/g, '').trim();
        if (purchase(value, cleanText)) {
            select.value = '';
            hideModal('shopModal');
        }
    } else {
        showNotification('‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫—É–ø–∫—É!');
    }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
function clearHistory() {
    if (confirm('üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π?')) {
        history = [];
        renderHistory();
        saveData();
        showNotification('üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞');
    }
}

function resetBalance() {
    if (confirm('‚ö†Ô∏è –°–±—Ä–æ—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å –º–∞–º–∫–æ–∏–Ω–æ–≤ –¥–æ –Ω—É–ª—è?')) {
        mamcoins = 0;
        pavlushi = 0;
        updateDisplay();
        addToHistory('–ë–∞–ª–∞–Ω—Å —Å–±—Ä–æ—à–µ–Ω', '0 üü¢ 0 üü°', 'negative');
        saveData();
        showNotification('üîÑ –ë–∞–ª–∞–Ω—Å —Å–±—Ä–æ—à–µ–Ω');
    }
}

// –°–æ–±—ã—Ç–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function setupModalEvents() {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.addEventListener('click', (event) => {
        const modals = ['earnModal', 'spendModal', 'shopModal'];
        modals.forEach(modalId => {
            const modal = document.getElementById(modalId);
            if (event.target === modal) {
                hideModal(modalId);
            }
        });
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Escape
    document.addEventListener('keydown', (event) => {
        if (event.key === 'Escape') {
            const modals = ['earnModal', 'spendModal', 'shopModal'];
            modals.forEach(modalId => {
                hideModal(modalId);
            });
        }
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω
function setupConnectionEvents() {
    window.addEventListener('online', () => {
        console.log('üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        checkOnlineStatus();
        // –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
        saveData();
    });
    
    window.addEventListener('offline', () => {
        console.log('üì¥ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ');
        checkOnlineStatus();
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ú–∞–º–∫–æ–∏–Ω—ã...');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    if (!window.navigator.onLine === undefined) {
        console.warn('‚ö†Ô∏è –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π
    setupModalEvents();
    setupConnectionEvents();
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞
    const header = document.querySelector('header h1');
    if (header) {
        const statusDiv = document.createElement('div');
        statusDiv.id = 'status-indicator';
        statusDiv.style.cssText = `
            font-size: 8px;
            margin-top: 5px;
            opacity: 0.8;
        `;
        header.appendChild(statusDiv);
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    loadData();
    checkOnlineStatus();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initApp);

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è HTML
window.showEarnModal = showEarnModal;
window.showSpendModal = showSpendModal;  
window.showShopModal = showShopModal;
window.hideModal = hideModal;
window.confirmEarn = confirmEarn;
window.confirmSpend = confirmSpend;
window.confirmShop = confirmShop;
window.clearHistory = clearHistory;
window.resetBalance = resetBalance;

// CSS —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from { transform: translateX(300px); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    
    @keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(300px); opacity: 0; }
    }
    
    #mamcoins, #pavlushi {
        transition: all 0.3s ease;
    }
`;
document.head.appendChild(style);

console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –º–∞–º–∫–æ–∏–Ω–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω!');
