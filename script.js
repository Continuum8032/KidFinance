// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
  apiKey: 'AIzaSyB8i6XUdNv8XdMEtip7mMBZe_f1-6MuawE',
  authDomain: 'mamcoins-tracker.firebaseapp.com',
  projectId: 'mamcoins-tracker',
  storageBucket: 'mamcoins-tracker.firebasestorage.app',
  messagingSenderId: '655371831130',
  appId: '1:655371831130:web:1bd473c42b14cb4bd15563',
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let mamcoins = 0;
let pavlushi = 0;
let history = [];
let isLoading = true;
let db = null;
let userId = 'family_child_1';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase v8
function initializeFirebase() {
  try {
    console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase v8...');
    firebase.initializeApp(firebaseConfig);
    db = firebase.firestore();
    console.log('‚úÖ Firebase v8 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    startDataListener();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase:', error);
    console.log('üì± –ò—Å–ø–æ–ª—å–∑—É–µ–º localStorage');
    loadFromLocalStorage();
    isLoading = false;
    updateDisplay();
    loadHistory();
  }
}

// –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö Firebase
function startDataListener() {
  try {
    const userDocRef = db.collection('users').doc(userId);
    
    userDocRef.onSnapshot((docSnapshot) => {
      if (docSnapshot.exists) {
        const data = docSnapshot.data();
        mamcoins = data.mamcoins || 0;
        pavlushi = data.pavlushi || 0;
        history = data.history || [];
        
        console.log(`üí∞ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ Firebase: ${mamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤, ${pavlushi} –ø–∞–≤–ª—É—à–µ–π`);
      } else {
        console.log('üë∂ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        createNewUser();
      }
      
      isLoading = false;
      updateDisplay();
      loadHistory();
    }, (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase:', error);
      loadFromLocalStorage();
      isLoading = false;
      updateDisplay();
      loadHistory();
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª—É—à–∞—Ç–µ–ª—è Firebase:', error);
    loadFromLocalStorage();
    isLoading = false;
    updateDisplay();
    loadHistory();
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firebase
function createNewUser() {
  try {
    const userDocRef = db.collection('users').doc(userId);
    
    userDocRef.set({
      mamcoins: 0,
      pavlushi: 0,
      history: [],
      createdAt: firebase.firestore.FieldValue.serverTimestamp(),
      lastActive: firebase.firestore.FieldValue.serverTimestamp(),
    }).then(() => {
      console.log('‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ Firebase');
    }).catch((error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Firebase
function saveToFirebase() {
  if (isLoading || !db) {
    console.log('‚è≥ Firebase –Ω–µ –≥–æ—Ç–æ–≤, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ');
    saveToLocalStorage();
    return;
  }
  
  try {
    const userDocRef = db.collection('users').doc(userId);
    
    userDocRef.update({
      mamcoins: mamcoins,
      pavlushi: pavlushi,
      history: history,
      lastActive: firebase.firestore.FieldValue.serverTimestamp(),
    }).then(() => {
      console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ Firebase: ${mamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤, ${pavlushi} –ø–∞–≤–ª—É—à–µ–π`);
    }).catch((error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Firebase:', error);
      saveToLocalStorage();
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Firebase:', error);
    saveToLocalStorage();
  }
}

// Fallback –º–µ—Ç–æ–¥—ã –¥–ª—è localStorage
function loadFromLocalStorage() {
  const savedMamcoins = localStorage.getItem('mamcoins');
  const savedPavlushi = localStorage.getItem('pavlushi');
  const savedHistory = localStorage.getItem('history');

  if (savedMamcoins !== null) {
    mamcoins = parseInt(savedMamcoins) || 0;
  }

  if (savedPavlushi !== null) {
    pavlushi = parseInt(savedPavlushi) || 0;
  }

  if (savedHistory) {
    try {
      history = JSON.parse(savedHistory) || [];
    } catch (e) {
      history = [];
    }
  }

  console.log(`üì± –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ localStorage: ${mamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤, ${pavlushi} –ø–∞–≤–ª—É—à–µ–π`);
}

function saveToLocalStorage() {
  localStorage.setItem('mamcoins', mamcoins.toString());
  localStorage.setItem('pavlushi', pavlushi.toString());
  localStorage.setItem('history', JSON.stringify(history));
  
  console.log(`üì± –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ localStorage: ${mamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤, ${pavlushi} –ø–∞–≤–ª—É—à–µ–π`);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function updateDisplay() {
  const mamcoinsEl = document.getElementById('mamcoins');
  const pavlushiEl = document.getElementById('pavlushi');
  
  if (mamcoinsEl) mamcoinsEl.textContent = mamcoins;
  if (pavlushiEl) pavlushiEl.textContent = pavlushi;
}

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø–∞–≤–ª—É—à–µ–π –≤ –º–∞–º–∫–æ–∏–Ω—ã
function convertPavlushi() {
  if (pavlushi >= 10) {
    const newMamcoins = Math.floor(pavlushi / 10);
    mamcoins += newMamcoins;
    pavlushi = pavlushi % 10;

    addToHistory(`üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: ${newMamcoins} –º–∞–º–∫–æ–∏–Ω–æ–≤ –∏–∑ –ø–∞–≤–ª—É—à–µ–π`, 'earn');
  }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
function addToHistory(text, type = 'earn') {
  const now = new Date();
  const timeStr = now.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });

  const newHistoryItem = {
    text: text,
    time: timeStr,
    type: type,
    timestamp: now.getTime(),
  };

  history.unshift(newHistoryItem);

  if (history.length > 50) {
    history = history.slice(0, 50);
  }

  saveToFirebase();
  loadHistory();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
function loadHistory() {
  const historyList = document.getElementById('history-list');
  if (!historyList) return;

  historyList.innerHTML = '';
  
  if (isLoading) {
    historyList.innerHTML = '<div class="history-item">üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase...</div>';
    return;
  }

  if (history.length === 0) {
    historyList.innerHTML = '<div class="history-item">ü¶ä –õ–∏—Å–∏—á–∫–∞ –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–ª–∞</div>';
    return;
  }

  history.forEach(item => {
    const div = document.createElement('div');
    div.className = `history-item ${item.type}`;
    div.innerHTML = `<strong>[${item.time}]</strong> ${item.text}`;
    historyList.appendChild(div);
  });
}

// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø HTML onclick

function showEarnModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞');
  const modal = document.getElementById('earnModal');
  if (modal) {
    modal.style.display = 'block';
  } else {
    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ earnModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
}

function showSpendModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —à—Ç—Ä–∞—Ñ–∞');
  const modal = document.getElementById('spendModal');
  if (modal) {
    modal.style.display = 'block';
  } else {
    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ spendModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
}

function showShopModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞–≥–∞–∑–∏–Ω–∞');
  const modal = document.getElementById('shopModal');
  if (modal) {
    modal.style.display = 'block';
  } else {
    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ shopModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
}

function closeModal(modalId) {
  console.log(`ü¶ä –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ: ${modalId}`);
  
  if (!modalId) {
    console.error('‚ùå modalId –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ closeModal');
    return;
  }
  
  const modal = document.getElementById(modalId);
  if (modal) {
    modal.style.display = 'none';

    const selectors = {
      earnModal: 'earnAction',
      spendModal: 'spendAction',
      shopModal: 'shopAction',
    };

    if (selectors[modalId]) {
      const selectElement = document.getElementById(selectors[modalId]);
      if (selectElement) {
        selectElement.value = '';
      }
    }
  } else {
    console.error(`‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ${modalId} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
  }
}

function confirmEarn() {
  const select = document.getElementById('earnAction');
  if (!select) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç earnAction –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text || value <= 0) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!');
    return;
  }

  console.log(`‚úÖ –ó–∞—Ä–∞–±–æ—Ç–∞–ª: ${text} (+${value} –ø–∞–≤–ª—É—à–µ–π)`);

  pavlushi += value;
  convertPavlushi();
  addToHistory(`‚úÖ ${text}`, 'earn');
  updateDisplay();
  closeModal('earnModal');
}

function confirmSpend() {
  const select = document.getElementById('spendAction');
  if (!select) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç spendAction –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text || value <= 0) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Å—Ç—É–ø–æ–∫!');
    return;
  }

  console.log(`‚ùå –®—Ç—Ä–∞—Ñ: ${text} (-${value} –ø–∞–≤–ª—É—à–µ–π/–º–∞–º–∫–æ–∏–Ω–æ–≤)`);

  if (value >= 100) {
    const mamcoinsToRemove = Math.floor(value / 10);
    if (mamcoins >= mamcoinsToRemove) {
      mamcoins -= mamcoinsToRemove;
    } else {
      const totalPavlushi = mamcoins * 10 + pavlushi;
      if (totalPavlushi >= value) {
        const remainingPavlushi = totalPavlushi - value;
        mamcoins = Math.floor(remainingPavlushi / 10);
        pavlushi = remainingPavlushi % 10;
      } else {
        mamcoins = 0;
        pavlushi = 0;
      }
    }
  } else {
    if (pavlushi >= value) {
      pavlushi -= value;
    } else {
      const totalPavlushi = mamcoins * 10 + pavlushi;
      if (totalPavlushi >= value) {
        const remainingPavlushi = totalPavlushi - value;
        mamcoins = Math.floor(remainingPavlushi / 10);
        pavlushi = remainingPavlushi % 10;
      } else {
        mamcoins = 0;
        pavlushi = 0;
      }
    }
  }

  addToHistory(`‚ùå ${text}`, 'spend');
  updateDisplay();
  closeModal('spendModal');
}

function confirmShop() {
  const select = document.getElementById('shopAction');
  if (!select) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç shopAction –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text || value <= 0) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!');
    return;
  }

  const mamcoinsNeeded = Math.floor(value / 10);
  const totalMamcoins = mamcoins + Math.floor(pavlushi / 10);

  if (totalMamcoins < mamcoinsNeeded) {
    alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–º–∫–æ–∏–Ω–æ–≤! –ù—É–∂–Ω–æ: ${mamcoinsNeeded}, –µ—Å—Ç—å: ${totalMamcoins}`);
    return;
  }

  console.log(`üõí –ü–æ–∫—É–ø–∫–∞: ${text} (-${mamcoinsNeeded} –º–∞–º–∫–æ–∏–Ω–æ–≤)`);

  const totalPavlushi = mamcoins * 10 + pavlushi;
  const remainingPavlushi = totalPavlushi - value;

  mamcoins = Math.floor(remainingPavlushi / 10);
  pavlushi = remainingPavlushi % 10;

  addToHistory(`üõí –ö—É–ø–∏–ª: ${text}`, 'shop');
  updateDisplay();
  closeModal('shopModal');
}

// ALIAS –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function addEarning() {
  console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è addEarning, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ confirmEarn');
  confirmEarn();
}

function addSpending() {
  console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è addSpending, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ confirmSpend');
  confirmSpend();
}

function addShopping() {
  console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è addShopping, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ confirmShop');
  confirmShop();
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏—Ö
window.onclick = function (event) {
  const modals = ['earnModal', 'spendModal', 'shopModal'];

  modals.forEach(modalId => {
    const modal = document.getElementById(modalId);
    if (modal && event.target === modal) {
      closeModal(modalId);
    }
  });
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.mamcoinsDebug = {
  showData: () => console.log({ 
    mamcoins, 
    pavlushi, 
    history: history.slice(0, 5),
    totalHistory: history.length,
    isLoading, 
    firebaseConnected: !!db,
    elements: {
      earnModal: !!document.getElementById('earnModal'),
      spendModal: !!document.getElementById('spendModal'),
      shopModal: !!document.getElementById('shopModal'),
      earnAction: !!document.getElementById('earnAction'),
      spendAction: !!document.getElementById('spendAction'),
      shopAction: !!document.getElementById('shopAction')
    }
  }),
  addMamcoins: (amount) => { 
    mamcoins += amount; 
    updateDisplay(); 
    saveToFirebase(); 
    console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} –º–∞–º–∫–æ–∏–Ω–æ–≤`);
  },
  addPavlushi: (amount) => { 
    pavlushi += amount; 
    updateDisplay(); 
    saveToFirebase(); 
    console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} –ø–∞–≤–ª—É—à–µ–π`);
  },
  reset: () => { 
    if (confirm('–¢–æ—á–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ?')) {
      mamcoins = 0; 
      pavlushi = 0; 
      history = []; 
      updateDisplay(); 
      saveToFirebase();
      console.log('üîÑ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã');
    }
  },
  forceSync: () => {
    saveToFirebase();
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è');
  },
  testFirebase: () => {
    console.log('üî• –¢–µ—Å—Ç–∏—Ä—É–µ–º Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
    console.log('Firebase app:', typeof firebase !== 'undefined' ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    console.log('Firestore:', db ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω' : '‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    console.log('User ID:', userId);
    console.log('Loading state:', isLoading ? '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...' : '–ì–æ—Ç–æ–≤');
  },
  testElements: () => {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML —ç–ª–µ–º–µ–Ω—Ç—ã...');
    ['earnModal', 'spendModal', 'shopModal', 'earnAction', 'spendAction', 'shopAction'].forEach(id => {
      const el = document.getElementById(id);
      console.log(`${id}:`, el ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω');
    });
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function () {
  console.log('ü¶ä –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –º–∞–º–∫–æ–∏–Ω–æ–≤...');
  updateDisplay();
  loadHistory();
  
  setTimeout(() => {
    window.mamcoinsDebug.testElements();
  }, 100);
  
  if (typeof firebase !== 'undefined') {
    console.log('‚úÖ Firebase SDK –∑–∞–≥—Ä—É–∂–µ–Ω');
    initializeFirebase();
  } else {
    console.error('‚ùå Firebase SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage');
    loadFromLocalStorage();
    isLoading = false;
    updateDisplay();
    loadHistory();
  }
});

console.log('ü¶ä –°–∏—Å—Ç–µ–º–∞ –º–∞–º–∫–æ–∏–Ω–æ–≤ —Å Firebase v8 –≥–æ—Ç–æ–≤–∞! –ö–æ–º–∞–Ω–¥—ã –æ—Ç–ª–∞–¥–∫–∏: window.mamcoinsDebug'); 
